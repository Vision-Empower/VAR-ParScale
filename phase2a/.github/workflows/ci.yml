name: ParScale-EAR CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: self-hosted
    
    # 要求GPU runner with CUDA support
    # Self-hosted runner应配置: Ubuntu 22.04 + CUDA 12.2 + H100/A100
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
        
    - name: Install dependencies
      run: |
        poetry install --no-root --no-interaction --no-ansi
        
    - name: Check GPU availability
      run: |
        nvidia-smi
        poetry run python -c "import torch; print(f'CUDA available: {torch.cuda.is_available()}'); print(f'GPU count: {torch.cuda.device_count()}')"
        
    - name: Verify checksums
      run: |
        sha256sum -c SHA256SUMS
        
    - name: Environment setup and validation
      run: |
        # Quick environment verification
        bash setup_env.sh
        
    - name: Run CI pipeline
      run: |
        chmod +x ci/run.sh
        bash ci/run.sh
        
    - name: Run tests
      run: |
        poetry run pytest ci/tests/ -v --tb=short
        
    - name: Upload results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ci-results
        path: |
          results/
          tmp/
          
    - name: Performance regression check
      run: |
        poetry run python ci/validate_results.py --results_dir results
        
  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download CI results
      uses: actions/download-artifact@v3
      with:
        name: ci-results
        path: ci-artifacts/
        
    - name: Create release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          # ParScale-EAR Lite-Hybrid v0.3.0
          
          ## Performance Metrics (H100 validated)
          - **Latency**: 0.566ms P99 per image
          - **Quality**: ΔFID = -64.5 (16.4% improvement)
          - **Architecture**: Lite-Hybrid dual-branch processing
          
          ## Validation Results
          - ✅ M2-2 Latency: 0.566ms P99 ≤ 0.6ms target
          - ✅ M2-3 FID: ΔFID = -64.5 ≪ +3 threshold  
          - ✅ M3-1 Ablation: Both branches proven valuable
          
          ## Files
          See attached artifacts for full validation results.
          
        draft: false
        prerelease: false